<!DOCTYPE html>
<html lang="es" xmlns:th="http://www.thymeleaf.org">
<head th:replace="~{fragments/layout :: head}">
    <title>Clientes - SkinCare Store</title>
</head>

<body>
    <!-- Navbar -->
    <nav th:replace="~{presentation/layout :: navbar}"></nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <!-- Header -->
            <div class="page-header">
                <div class="header-content">
                    <div class="header-text">
                        <h1 class="page-title">
                            <i class="fa-solid fa-users icon icon-lg"></i>
                            Gestión de Clientes
                        </h1>
                        <p class="page-description">Administra la información de tus clientes</p>
                    </div>
                    <button class="btn btn-primary" onclick="openClientModal()">
                        <i class="fa-solid fa-plus icon"></i>
                        <span>Nuevo Cliente</span>
                    </button>
                </div>
            </div>

            <!-- Search and Filters -->
            <div class="search-filters">
                <div class="search-box">
                    <i class="fa-solid fa-search search-icon"></i>
                    <input type="text" id="searchClients" placeholder="Buscar clientes..." class="search-input">
                </div>
                <div class="filter-group">
                    <select id="filterStatus" class="select">
                        <option value="">Todos los estados</option>
                        <option value="activo">Activo</option>
                        <option value="inactivo">Inactivo</option>
                    </select>
                    <select id="filterCity" class="select">
                        <option value="">Todas las ciudades</option>
                        <option value="lima">Lima</option>
                        <option value="arequipa">Arequipa</option>
                        <option value="cusco">Cusco</option>
                        <option value="trujillo">Trujillo</option>
                    </select>
                </div>
            </div>

            <!-- Clients Table -->
            <div class="table-container">
                <table class="table" id="clientsTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Email</th>
                            <th>Teléfono</th>
                            <th>Ciudad</th>
                            <th>Fecha Registro</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="clientsTableBody">
                        <!-- Contenido dinámico -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination-container">
                <div class="pagination-info">
                    <span>Mostrando 0 clientes</span>
                </div>
                <div class="pagination">
                    <button class="pagination-btn" disabled>
                        <i class="fa-solid fa-chevron-left icon"></i>
                    </button>
                    <button class="pagination-btn active">1</button>
                    <button class="pagination-btn">
                        <i class="fa-solid fa-chevron-right icon"></i>
                    </button>
                </div>
            </div>
        </div>
    </main>

    <!-- Client Modal -->
    <div id="clientModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modalTitle">Nuevo Cliente</h3>
                <button class="modal-close" onclick="closeClientModal()">
                    <i class="fa-solid fa-xmark icon"></i>
                </button>
            </div>
            <form id="clientForm" class="modal-body">
                <input type="hidden" id="clientId">

                <div class="form-grid">
                    <div class="form-group">
                        <label for="clientName" class="form-label">Nombre Completo *</label>
                        <input type="text" id="clientName" class="form-input" required>
                    </div>

                    <div class="form-group">
                        <label for="clientEmail" class="form-label">Email *</label>
                        <input type="email" id="clientEmail" class="form-input" required>
                    </div>

                    <div class="form-group">
                        <label for="clientPhone" class="form-label">Teléfono</label>
                        <input type="tel" id="clientPhone" class="form-input">
                    </div>

                    <div class="form-group">
                        <label for="clientDocument" class="form-label">Documento</label>
                        <input type="text" id="clientDocument" class="form-input">
                    </div>
                </div>

                <div class="form-grid">
                    <div class="form-group">
                        <label for="clientCity" class="form-label">Ciudad</label>
                        <select id="clientCity" class="form-input">
                            <option value="">Seleccionar ciudad</option>
                            <option value="lima">Lima</option>
                            <option value="arequipa">Arequipa</option>
                            <option value="cusco">Cusco</option>
                            <option value="trujillo">Trujillo</option>
                            <option value="piura">Piura</option>
                            <option value="chiclayo">Chiclayo</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="clientStatus" class="form-label">Estado</label>
                        <select id="clientStatus" class="form-input">
                            <option value="activo">Activo</option>
                            <option value="inactivo">Inactivo</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label for="clientAddress" class="form-label">Dirección</label>
                    <textarea id="clientAddress" class="form-input" rows="3"></textarea>
                </div>

                <div class="form-group">
                    <label for="clientNotes" class="form-label">Notas</label>
                    <textarea id="clientNotes" class="form-input" rows="3" placeholder="Notas adicionales sobre el cliente..."></textarea>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-ghost" onclick="closeClientModal()">Cancelar</button>
                <button type="submit" form="clientForm" class="btn btn-primary" id="saveClientBtn">Guardar Cliente</button>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content modal-sm">
            <div class="modal-header">
                <h3>Confirmar Eliminación</h3>
                <button class="modal-close" onclick="closeDeleteModal()">
                    <i class="fa-solid fa-xmark icon"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="delete-confirmation">
                    <i class="fa-solid fa-triangle-exclamation icon icon-lg text-destructive"></i>
                    <p>¿Estás seguro de que deseas eliminar este cliente?</p>
                    <p class="text-muted">Esta acción no se puede deshacer.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-ghost" onclick="closeDeleteModal()">Cancelar</button>
                <button type="button" class="btn btn-destructive" onclick="confirmDeleteClient()">Eliminar</button>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer th:replace="~{fragments/layout :: footer}"></footer>

    <script>
        let clients = []; // Inicialmente vacío
        let currentClientId = null;

        document.addEventListener('DOMContentLoaded', function() {
            renderClientsTable();
            setupEventListeners();
        });

        function setupEventListeners() {
            document.getElementById('searchClients').addEventListener('input', filterClients);
            document.getElementById('filterStatus').addEventListener('change', filterClients);
            document.getElementById('filterCity').addEventListener('change', filterClients);

            document.getElementById('clientForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveClient();
            });
        }

        function renderClientsTable() {
            const tableBody = document.getElementById('clientsTableBody');
            const filteredClients = getFilteredClients();

            if (filteredClients.length === 0) {
                tableBody.innerHTML = `<tr><td colspan="8" class="text-center">No hay clientes registrados</td></tr>`;
                return;
            }

            tableBody.innerHTML = filteredClients.map(client => `
                <tr>
                    <td><span class="badge badge-outline">#${client.id.toString().padStart(3, '0')}</span></td>
                    <td>
                        <div class="client-info">
                            <div class="client-avatar">
                                <i class="fa-solid fa-user icon"></i>
                            </div>
                            <div>
                                <div class="font-medium">${client.name}</div>
                                <div class="text-sm text-muted">${client.document || 'Sin documento'}</div>
                            </div>
                        </div>
                    </td>
                    <td>${client.email}</td>
                    <td>${client.phone || '-'}</td>
                    <td>
                        <span class="badge badge-secondary">
                            ${client.city ? client.city.charAt(0).toUpperCase() + client.city.slice(1) : '-'}
                        </span>
                    </td>
                    <td>${formatDate(client.registrationDate)}</td>
                    <td>
                        <span class="badge ${client.status === 'activo' ? 'badge-success' : 'badge-muted'}">
                            ${client.status === 'activo' ? 'Activo' : 'Inactivo'}
                        </span>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn btn-ghost btn-sm" onclick="editClient(${client.id})" title="Editar">
                                <i class="fa-solid fa-pen-to-square icon"></i>
                            </button>
                            <button class="btn btn-ghost btn-sm" onclick="deleteClient(${client.id})" title="Eliminar">
                                <i class="fa-solid fa-trash icon"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        function getFilteredClients() {
            const searchTerm = document.getElementById('searchClients').value.toLowerCase();
            const statusFilter = document.getElementById('filterStatus').value;
            const cityFilter = document.getElementById('filterCity').value;

            return clients.filter(client => {
                const matchesSearch = !searchTerm ||
                    client.name.toLowerCase().includes(searchTerm) ||
                    client.email.toLowerCase().includes(searchTerm) ||
                    (client.phone && client.phone.includes(searchTerm));

                const matchesStatus = !statusFilter || client.status === statusFilter;
                const matchesCity = !cityFilter || client.city === cityFilter;

                return matchesSearch && matchesStatus && matchesCity;
            });
        }

        function filterClients() {
            renderClientsTable();
        }

        function openClientModal() {
            currentClientId = null;
            document.getElementById('modalTitle').textContent = 'Nuevo Cliente';
            document.getElementById('saveClientBtn').textContent = 'Guardar Cliente';
            document.getElementById('clientForm').reset();
            document.getElementById('clientStatus').value = 'activo';
            document.getElementById('clientModal').classList.add('active');
        }

        function closeClientModal() {
            document.getElementById('clientModal').classList.remove('active');
        }

        function editClient(id) {
            const client = clients.find(c => c.id === id);
            if (!client) return;

            currentClientId = id;
            document.getElementById('modalTitle').textContent = 'Editar Cliente';
            document.getElementById('saveClientBtn').textContent = 'Actualizar Cliente';

            document.getElementById('clientId').value = client.id;
            document.getElementById('clientName').value = client.name;
            document.getElementById('clientEmail').value = client.email;
            document.getElementById('clientPhone').value = client.phone || '';
            document.getElementById('clientDocument').value = client.document || '';
            document.getElementById('clientCity').value = client.city || '';
            document.getElementById('clientStatus').value = client.status;
            document.getElementById('clientAddress').value = client.address || '';
            document.getElementById('clientNotes').value = client.notes || '';

            document.getElementById('clientModal').classList.add('active');
        }

        function saveClient() {
            const formData = {
                name: document.getElementById('clientName').value,
                email: document.getElementById('clientEmail').value,
                phone: document.getElementById('clientPhone').value,
                document: document.getElementById('clientDocument').value,
                city: document.getElementById('clientCity').value,
                status: document.getElementById('clientStatus').value,
                address: document.getElementById('clientAddress').value,
                notes: document.getElementById('clientNotes').value
            };

            if (!formData.name || !formData.email) {
                alert('Por favor completa los campos obligatorios');
                return;
            }

            if (currentClientId) {
                const clientIndex = clients.findIndex(c => c.id === currentClientId);
                if (clientIndex !== -1) {
                    clients[clientIndex] = { ...clients[clientIndex], ...formData };
                }
            } else {
                const newClient = {
                    id: clients.length > 0 ? Math.max(...clients.map(c => c.id)) + 1 : 1,
                    ...formData,
                    registrationDate: new Date().toISOString().split('T')[0]
                };
                clients.push(newClient);
            }

            renderClientsTable();
            closeClientModal();
            showToast(currentClientId ? 'Cliente actualizado exitosamente' : 'Cliente creado exitosamente');
        }

        function deleteClient(id) {
            currentClientId = id;
            document.getElementById('deleteModal').classList.add('active');
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').classList.remove('active');
        }

        function confirmDeleteClient() {
            if (currentClientId) {
                clients = clients.filter(c => c.id !== currentClientId);
                renderClientsTable();
                closeDeleteModal();
                showToast('Cliente eliminado exitosamente');
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('es-ES', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });
        }

        function showToast(message) {
            const toast = document.createElement('div');
            toast.className = 'toast';
            toast.textContent = message;
            document.body.appendChild(toast);

            setTimeout(() => { toast.classList.add('show'); }, 100);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => { document.body.removeChild(toast); }, 300);
            }, 3000);
        }

        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('active');
            }
        });
    </script>
</body>
</html>
